# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=gitcontrol-shell

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl
    - env: TARGET=i686-unknown-linux-musl

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "q1Y3FbF7HyEZi0H9sjfWcymdejmI0ZdRJ19o8fg+XnR+CI09+YKY/ue3tEyFivT8PN6A7k/ATkdnM/tL+csEvkPTV1FFJpHz5KAQRoJEl52vX2H19ov36hNuyC8rx8O+QRmY2tpJ712ACbgQsi5/fwbEIDYw4Q/75NaDqkhRMwcV4RgMdbg2GRiqvA0aM3atz6/PSzobllRnzi0ZMuc6hRS+Lg5keZ6O133xOb2z7d+9nHBTMEaSCxLGwz+pZi9BqeeQctneat60tpZ6o1OUJ8ikg7MoBO6P6N+XhDrdZKJDCG3kt6xwC0K9i7IIKE1T/bqPQA84/dkwPX1W27MEQ9FXDOt9g9DACCgb8x32KdlUNr6HkxlAhaV2PJxnMR5O4XhVST4j5Uk61xbW456AmYxrwSc+hxiixiWXTWjHQwGwaTdESuLML8KukFYC3oFeUY7ClNMObx9AEVImH7lKrwNESdJdHf+mi6mFm7dNdqNsQ7qT7hcw434ZcV4W2dytKonbUGjvvgB8d2kqa4+OvY0zmC8Xn7Wf6DIA/Y+9VLrMmEsLfBObfalz34RWQ+BOCxzCaR6bXUZytUJ1i7RzOJ4VoqAqR7AU2KOFpW1daZfFAx43vsfNterGGxuAN/FTLBKXCVwa8M8PXVfxcVH0V2M0bZAnk2m6hT9cvU3YxdY="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never

# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=gitcontrol-shell

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "C83Pe5i7uxLqQMQ+KU/5d92exd+j31SOVYJQvD1g9CK7dOwIUNpdL4OQo7cI13qp5MXLpLOVDgdrGHbhWlvvZyHXv5fqXrBQRLWxTLl6YUShlPY9nCBp6WJtcz3iPh5KrReZngin25vejpcJKuipnQjYg21qfnTv5Wp14iHvRaO1A0YOpGmZmKZye48jXYWnzbTcgclKEgyS+LeGYGoE34zWFPoc+9ekCtWYF1uYHh4mvuG0N2aY53o5SwkchLDIQIrKBjMN9ZhBvsjKpiQUYu3Jj9r9Tp1r/QFuc0lYozgIUa+H+sAmRlLmvW+GTcmUDYsUZK7b/tcNFkQRepATDVBGwOHpSNip05ZxcHeP1Ic3kvZJA4nflRO4KD6SnSxczrl0THq2sopEBCNqSYlfa63TVQ1mImUrb1YinyS6mRaQMM7tcmCHqxzC0R/pqKZDofvu0KJE46wcR0Z8mfzkDPaivDOUX2etz5Jl3UF0c6L5I7WT1JtKqk+v2m0El4yHHamgC1fi9PJ39nGWvkOL4mNisnTixgMp/JtnqaTYR1PROKkXSVuyNmPCQx82h6Bhcx8ybeqYrFsNDlVbYsXIf9X5Gs4A3m8o5uIrSpGdrI2cJqvw2vUhZRixLpR05tJ7Wk2avwo4aZMvX/SGZAfL0DfLqBjUb6nq7aKSwQ+vPzQ="

  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never

# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=gitcontrol-shell

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "mhmNgSJCIY6QSEGcxYZKENXwPYlGR8scv/tJgDS3NFIzF2me9KmgnMaJEfE5E+dWnZV/vtL7mGXtVFp5N6XmIcEVqlwmJnea0kkEGN0n+BW3x/RgqCbM7tx646V5U85UvPC+cp/ynGKFZzDiigc48xDH/ANILfu5n8/zKMYVOT0G7pz6ePIdDSXoS7T10OQLRY6Vw3ipJVBcglRs1ThhJuowxoAi3UUlIJCkKVdJFQlOityC4k1IRCe7UMIRWIepFfxa1CtltWmYOwLwRpruR91nESTKfzXtZk0YOBw+g8Al4ZgdqL2xq0dtb5WgOpkDwQp+vx3+OXfmebp9INbNYU9JQ+ddbEXDbvRpBMjjjE9Szw6uUAr2VPN8N2T+bNQ06U89AafrzM22+KNNfBK+LnDnCoMfEkfz81oH7PotaSj835RRppu0CbePNL+OXHiSoId/KJRM/+gClpuaGl9gnfIBD19NX8p82Cw4+hzxpzOYnDqGd8/GYeD2241O4gENQ9TdPwnfrLFNZoWFNLKYF5Ca7bqBnRZihAlJYR9K8dxWYnLBWmxu9safjyWQzQDnrx/8EImKJIjsRtkn8V7OhCQuX8STvhNitjpQ2BuBSC6mHmJFIaYKkmCQnP/DH/z4h50aIg6kBCxx1z3HOwHW2X1QXaCYBKl/mfCHrIFxeIA="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
